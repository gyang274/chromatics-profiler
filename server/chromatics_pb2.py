# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chromatics.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='chromatics.proto',
  package='chromatics',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x10\x63hromatics.proto\x12\nchromatics\"\x14\n\x05Image\x12\x0b\n\x03\x62\x36\x34\x18\x01 \x01(\t\"w\n\x10\x43hromaticProfile\x12/\n\x04hslp\x18\x01 \x03(\x0b\x32!.chromatics.ChromaticProfile.HSLP\x1a\x32\n\x04HSLP\x12\t\n\x01h\x18\x01 \x01(\x02\x12\t\n\x01s\x18\x02 \x01(\x02\x12\t\n\x01l\x18\x03 \x01(\x02\x12\t\n\x01p\x18\x04 \x01(\x02\x32T\n\x08Profiler\x12H\n\x13GetChromaticProfile\x12\x11.chromatics.Image\x1a\x1c.chromatics.ChromaticProfile\"\x00\x62\x06proto3')
)




_IMAGE = _descriptor.Descriptor(
  name='Image',
  full_name='chromatics.Image',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='b64', full_name='chromatics.Image.b64', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=32,
  serialized_end=52,
)


_CHROMATICPROFILE_HSLP = _descriptor.Descriptor(
  name='HSLP',
  full_name='chromatics.ChromaticProfile.HSLP',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='h', full_name='chromatics.ChromaticProfile.HSLP.h', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='s', full_name='chromatics.ChromaticProfile.HSLP.s', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='l', full_name='chromatics.ChromaticProfile.HSLP.l', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='p', full_name='chromatics.ChromaticProfile.HSLP.p', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=123,
  serialized_end=173,
)

_CHROMATICPROFILE = _descriptor.Descriptor(
  name='ChromaticProfile',
  full_name='chromatics.ChromaticProfile',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hslp', full_name='chromatics.ChromaticProfile.hslp', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CHROMATICPROFILE_HSLP, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=54,
  serialized_end=173,
)

_CHROMATICPROFILE_HSLP.containing_type = _CHROMATICPROFILE
_CHROMATICPROFILE.fields_by_name['hslp'].message_type = _CHROMATICPROFILE_HSLP
DESCRIPTOR.message_types_by_name['Image'] = _IMAGE
DESCRIPTOR.message_types_by_name['ChromaticProfile'] = _CHROMATICPROFILE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Image = _reflection.GeneratedProtocolMessageType('Image', (_message.Message,), dict(
  DESCRIPTOR = _IMAGE,
  __module__ = 'chromatics_pb2'
  # @@protoc_insertion_point(class_scope:chromatics.Image)
  ))
_sym_db.RegisterMessage(Image)

ChromaticProfile = _reflection.GeneratedProtocolMessageType('ChromaticProfile', (_message.Message,), dict(

  HSLP = _reflection.GeneratedProtocolMessageType('HSLP', (_message.Message,), dict(
    DESCRIPTOR = _CHROMATICPROFILE_HSLP,
    __module__ = 'chromatics_pb2'
    # @@protoc_insertion_point(class_scope:chromatics.ChromaticProfile.HSLP)
    ))
  ,
  DESCRIPTOR = _CHROMATICPROFILE,
  __module__ = 'chromatics_pb2'
  # @@protoc_insertion_point(class_scope:chromatics.ChromaticProfile)
  ))
_sym_db.RegisterMessage(ChromaticProfile)
_sym_db.RegisterMessage(ChromaticProfile.HSLP)



_PROFILER = _descriptor.ServiceDescriptor(
  name='Profiler',
  full_name='chromatics.Profiler',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=175,
  serialized_end=259,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetChromaticProfile',
    full_name='chromatics.Profiler.GetChromaticProfile',
    index=0,
    containing_service=None,
    input_type=_IMAGE,
    output_type=_CHROMATICPROFILE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_PROFILER)

DESCRIPTOR.services_by_name['Profiler'] = _PROFILER

# @@protoc_insertion_point(module_scope)
